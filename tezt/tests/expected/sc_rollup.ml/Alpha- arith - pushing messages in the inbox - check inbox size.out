
./octez-client --wait none originate sc rollup from bootstrap1 of kind arith of type string booting with  --burn-cap 9999999
Node is bootstrapped.
Estimated gas: 2909.925 units (will add 100 for safety)
Estimated storage: 6524 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000649
    Expected counter: 1
    Gas limit: 3010
    Storage limit: 6544 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000649
      payload fees(the block proposer) ....... +ꜩ0.000649
    Smart contract rollup origination:
      Kind: arith
      Parameter type: string
      Boot sector Blake2B hash: '0e5751c026e543b2e8ab2eb06099daa1d1e5df47778f7787faab45cdf12fe3a8'
      This smart contract rollup origination was successfully applied
      Consumed gas: 2909.925
      Storage size: 6524 bytes
      Address: [SC_ROLLUP_HASH]
      Genesis commitment hash: [SC_ROLLUP_COMMITMENT_HASH]
      Balance updates:
        [PUBLIC_KEY_HASH] ... -ꜩ1.631
        storage fees ........................... +ꜩ1.631


./octez-client --wait none send sc rollup message 'text:["CAFEBABE"]' from bootstrap2
Node is bootstrapped.
Estimated gas: 1000.596 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000351
    Expected counter: 1
    Gas limit: 1101
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000351
      payload fees(the block proposer) ....... +ꜩ0.000351
    Smart contract rollup messages submission
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1000.596
      Resulting inbox state: { level = 3
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 6
                               message_counter = 2
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 2
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE"]' from bootstrap2
Node is bootstrapped.
Estimated gas: 1001.192 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000363
    Expected counter: 2
    Gas limit: 1102
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000363
      payload fees(the block proposer) ....... +ꜩ0.000363
    Smart contract rollup messages submission
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1001.192
      Resulting inbox state: { level = 4
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 10
                               message_counter = 3
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 3
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2
Node is bootstrapped.
Estimated gas: 1001.788 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000375
    Expected counter: 3
    Gas limit: 1102
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000375
      payload fees(the block proposer) ....... +ꜩ0.000375
    Smart contract rollup messages submission
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1001.788
      Resulting inbox state: { level = 5
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 15
                               message_counter = 4
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 4
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2
Node is bootstrapped.
Estimated gas: 1002.384 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000387
    Expected counter: 4
    Gas limit: 1103
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000387
      payload fees(the block proposer) ....... +ꜩ0.000387
    Smart contract rollup messages submission
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1002.384
      Resulting inbox state: { level = 6
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 21
                               message_counter = 5
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 5
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2
Node is bootstrapped.
Estimated gas: 1002.980 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000399
    Expected counter: 5
    Gas limit: 1103
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000399
      payload fees(the block proposer) ....... +ꜩ0.000399
    Smart contract rollup messages submission
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1002.980
      Resulting inbox state: { level = 7
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 28
                               message_counter = 6
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 6
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2
Node is bootstrapped.
Estimated gas: 1003.576 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000411
    Expected counter: 6
    Gas limit: 1104
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000411
      payload fees(the block proposer) ....... +ꜩ0.000411
    Smart contract rollup messages submission
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1003.576
      Resulting inbox state: { level = 8
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 36
                               message_counter = 7
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 7
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2
Node is bootstrapped.
Estimated gas: 1004.172 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000423
    Expected counter: 7
    Gas limit: 1105
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000423
      payload fees(the block proposer) ....... +ꜩ0.000423
    Smart contract rollup messages submission
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1004.172
      Resulting inbox state: { level = 9
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 45
                               message_counter = 8
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 8
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2
Node is bootstrapped.
Estimated gas: 1004.768 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000435
    Expected counter: 8
    Gas limit: 1105
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000435
      payload fees(the block proposer) ....... +ꜩ0.000435
    Smart contract rollup messages submission
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1004.768
      Resulting inbox state: { level = 10
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 55
                               message_counter = 9
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 9
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2
Node is bootstrapped.
Estimated gas: 1005.364 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000447
    Expected counter: 9
    Gas limit: 1106
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000447
      payload fees(the block proposer) ....... +ꜩ0.000447
    Smart contract rollup messages submission
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1005.364
      Resulting inbox state: { level = 11
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 66
                               message_counter = 10
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 10
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2
Node is bootstrapped.
Estimated gas: 1005.960 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000459
    Expected counter: 10
    Gas limit: 1106
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000459
      payload fees(the block proposer) ....... +ꜩ0.000459
    Smart contract rollup messages submission
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1005.960
      Resulting inbox state: { level = 12
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 78
                               message_counter = 11
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 11
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }

